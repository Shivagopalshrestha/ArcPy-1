# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# ElevProf.py
# Created on: 2015-11-09 14:37:07.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: ElevProf <SectionLine> <Distance> <Route_Identifier_Field__2_> <Expression> <NED10m1> 
# Description: 
# Generates Elevation Profiles for section lines and points where section lines are.
# ---------------------------------------------------------------------------

# Set the necessary product code
# import arcinfo


# Import arcpy module
import arcpy

# Script arguments
SectionLine = arcpy.GetParameterAsText(0)
if SectionLine == '#' or not SectionLine:
    SectionLine = "C:\\PROJECTS\\UMAR\\AHGW_UMAR.mdb\\Subsurface\\SectionLine" # provide a default value if unspecified

Distance = arcpy.GetParameterAsText(1)
if Distance == '#' or not Distance:
    Distance = "10 Meters" # provide a default value if unspecified

Route_Identifier_Field__2_ = arcpy.GetParameterAsText(2)
if Route_Identifier_Field__2_ == '#' or not Route_Identifier_Field__2_:
    Route_Identifier_Field__2_ = "SName" # provide a default value if unspecified

Expression = arcpy.GetParameterAsText(3)
if Expression == '#' or not Expression:
    Expression = "10" # provide a default value if unspecified

NED10m1 = arcpy.GetParameterAsText(4)
if NED10m1 == '#' or not NED10m1:
    NED10m1 = "C:\\PROJECTS\\UMAR\\CV_ASR.gdb\\NED10m1" # provide a default value if unspecified

direction = arcpy.GetParameterAsText(5)
if direction == '#' or not direction:
    direction == 'UPPER_LEFT'


# Local variables:
Output_Feature_Class__3_ = SectionLine
SectionLine_SimplifyLine_Pnt = SectionLine
Output_Feature_Class__6_ = "C:\\PROJECTS\\UMAR\\Default.gdb\\SectionLine_FeatureVerticesT1"
SectionLine_FeatureVerticesT1 = Output_Feature_Class__6_
SectionLine_FeatureVerticesT1__3_ = SectionLine_FeatureVerticesT1
Measure_Factor = "1"
SectionRoute = "C:\\PROJECTS\\UMAR\\Default.gdb\\SectionRoute"
Output_Event_Table_Properties = "RID POINT MEAS"
SectionLine_SimplifyLine = "C:\\PROJECTS\\UMAR\\Default.gdb\\SectionLine_SimplifyLine"
SectionLine_SimplifyLine_Fea = "C:\\PROJECTS\\UMAR\\Default.gdb\\SectionLine_SimplifyLine_Fea"

Output_Event_Table_Properties__2_ = "RID POINT MEAS"
ElevationPoints = "C:\\PROJECTS\\UMAR\\Default.gdb\\ElevationPoints"

ElevationPoints_Layer = "ElevationPoints_Layer"
ElevationProfile = "C:\\PROJECTS\\UMAR\\Default.gdb\\ElevationProfile"
SectionBends = "C:\\PROJECTS\\UMAR\\Default.gdb\\SectionBends"

SectionBends_Layer = "SectionBends_Layer"
SectionBendPoints = "C:\\PROJECTS\\UMAR\\Default.gdb\\SectionBendPoints"

# Process: Densify
arcpy.Densify_edit(SectionLine, "DISTANCE", Distance, "0.1 Meters", "10")

# Process: Feature Vertices To Points (2)
arcpy.FeatureVerticesToPoints_management(Output_Feature_Class__3_, Output_Feature_Class__6_, "ALL")

# Process: Add Surface Information
arcpy.AddSurfaceInformation_3d(Output_Feature_Class__6_, NED10m1, "Z", "BILINEAR", "", "1", "0", "NO_FILTER")

# Process: Add XY Coordinates (2)
arcpy.AddXY_management(SectionLine_FeatureVerticesT1)

# Process: Create Routes
arcpy.CreateRoutes_lr(SectionLine, Route_Identifier_Field__2_, SectionRoute, "LENGTH", "", "", "UPPER_LEFT", Measure_Factor, "0", "IGNORE", "INDEX")

arcpy.CreateRoutes_lr(SectionLine, Route_Identifier_Field__2_, SectionRoute, "LENGTH", "", "", direction, Measure_Factor, "0", "IGNORE", "INDEX")

# Process: Locate Features Along Routes
arcpy.LocateFeaturesAlongRoutes_lr(SectionLine_FeatureVerticesT1__3_, SectionRoute, Route_Identifier_Field__2_, "0 Meters", ElevationPoints, Output_Event_Table_Properties, "FIRST", "DISTANCE", "ZERO", "FIELDS", "M_DIRECTON")

# Process: Simplify Line
arcpy.SimplifyLine_cartography(SectionLine, SectionLine_SimplifyLine, "POINT_REMOVE", "10 Meters", "FLAG_ERRORS", "NO_KEEP", "NO_CHECK")

# Process: Feature Vertices To Points
arcpy.FeatureVerticesToPoints_management(SectionLine_SimplifyLine, SectionLine_SimplifyLine_Fea, "ALL")

# Process: Add Surface Information (2)
arcpy.AddSurfaceInformation_3d(SectionLine_SimplifyLine_Fea, NED10m1, "Z", "BILINEAR", "", "1", "0", "NO_FILTER")

# Process: Add XY Coordinates
arcpy.AddXY_management(SectionLine_SimplifyLine_Fea)

# Process: Locate Features Along Routes (2)
arcpy.LocateFeaturesAlongRoutes_lr(SectionLine_SimplifyLine_Fea, SectionRoute, Route_Identifier_Field__2_, "0 Meters", SectionBends, Output_Event_Table_Properties__2_, "FIRST", "DISTANCE", "ZERO", "FIELDS", "M_DIRECTON")

# Process: Add Field
arcpy.AddField_management(ElevationPoints, "SectionY", "DOUBLE", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Calculate Field
arcpy.CalculateField_management(ElevationPoints, "SectionY", Expression, "PYTHON", "")

with arcpy.da.UpdateCursor(ElevationPoints,["SectionY","Z"]) as cursor:
        for row in cursor:
            row[0] = row[1]*float(Expression)
            cursor.updateRow(row)


# Process: Make XY Event Layer
arcpy.MakeXYEventLayer_management(ElevationPoints, "MEAS", "SectionY", ElevationPoints_Layer, "PROJCS['NAD_1983_UTM_Zone_12N',GEOGCS['GCS_North_American_1983',DATUM['D_North_American_1983',SPHEROID['GRS_1980',6378137.0,298.257222101]],PRIMEM['Greenwich',0.0],UNIT['Degree',0.0174532925199433]],PROJECTION['Transverse_Mercator'],PARAMETER['False_Easting',500000.0],PARAMETER['False_Northing',0.0],PARAMETER['Central_Meridian',-111.0],PARAMETER['Scale_Factor',0.9996],PARAMETER['Latitude_Of_Origin',0.0],UNIT['Meter',1.0]];-5120900 -9998100 10000;-100000 10000;-100000 10000;0.001;0.001;0.001;IsHighPrecision", "")

# Process: Points To Line
arcpy.PointsToLine_management(ElevationPoints_Layer, ElevationProfile, "RID", "MEAS", "NO_CLOSE")

# Process: Add Field (2)
arcpy.AddField_management(SectionBends, "SectionY", "DOUBLE", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Calculate Field (2)
#arcpy.CalculateField_management(SectionBends__2_, "SectionY", "!Z! *" + Expression, "PYTHON", "")


with arcpy.da.UpdateCursor(SectionBends,["SectionY","Z"]) as cursor:
        for row in cursor:
            row[0] = row[1]*float(Expression)
            cursor.updateRow(row)

# Process: Make XY Event Layer (2)
arcpy.MakeXYEventLayer_management(SectionBends, "MEAS", "SectionY", SectionBends_Layer, "PROJCS['NAD_1983_UTM_Zone_12N',GEOGCS['GCS_North_American_1983',DATUM['D_North_American_1983',SPHEROID['GRS_1980',6378137.0,298.257222101]],PRIMEM['Greenwich',0.0],UNIT['Degree',0.0174532925199433]],PROJECTION['Transverse_Mercator'],PARAMETER['False_Easting',500000.0],PARAMETER['False_Northing',0.0],PARAMETER['Central_Meridian',-111.0],PARAMETER['Scale_Factor',0.9996],PARAMETER['Latitude_Of_Origin',0.0],UNIT['Meter',1.0]];-5120900 -9998100 10000;-100000 10000;-100000 10000;0.001;0.001;0.001;IsHighPrecision", "")

# Process: Copy Features
arcpy.CopyFeatures_management(SectionBends_Layer, SectionBendPoints, "", "0", "0", "0")

